---
# Skip all the k3s-specific systemd tasks since those don't apply to Talos
# - name: Download kube-vip RBAC manifest
#   ansible.builtin.get_url:
#     url: https://kube-vip.io/manifests/rbac.yaml
#     dest: /tmp/kube-vip-rbac.yaml
#     mode: '0664'

# - name: Apply kube-vip RBAC
#   kubernetes.core.k8s:
#     state: present
#     definition: "{{ lookup('file', '/tmp/kube-vip-rbac.yaml') | from_yaml_all | list }}"
#     kubeconfig: "{{ kubeconfig }}"
#   loop: "{{ lookup('file', '/tmp/kube-vip-rbac.yaml') | from_yaml_all | list }}"
#   when: item is not none

- name: Ensure kube-system namespace exists
  kubernetes.core.k8s:
    kubeconfig: /tmp/talos-kubeconfig
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: kube-system

# - name: Download kube-vip RBAC manifest
#   ansible.builtin.get_url:
#     url: https://kube-vip.io/manifests/rbac.yaml
#     dest: /tmp/kube-vip-rbac.yaml
#     mode: '0664'
#   when: deploy_kube_vip | default(true)

# - name: Deploy kube-vip RBAC
#   kubernetes.core.k8s:
#     src: /tmp/kube-vip-rbac.yaml
#     kubeconfig: /tmp/talos-kubeconfig  # Using the actual file path
#     state: present
#   when: deploy_kube_vip | default(true)

# - name: Deploy kube-vip DaemonSet
#   kubernetes.core.k8s:
#     definition:
#       apiVersion: apps/v1
#       kind: DaemonSet
#       metadata:
#         name: kube-vip-ds
#         namespace: kube-system
#       spec:
#         selector:
#           matchLabels:
#             name: kube-vip-ds
#         template:
#           metadata:
#             labels:
#               name: kube-vip-ds
#           spec:
#             affinity:
#               nodeAffinity:
#                 requiredDuringSchedulingIgnoredDuringExecution:
#                   nodeSelectorTerms:
#                   - matchExpressions:
#                     - key: node-role.kubernetes.io/control-plane
#                       operator: Exists
#             containers:
#             - args:
#               - manager
#               env:
#               - name: vip_arp
#                 value: "{{ 'true' if kube_vip_arp | default(true) | bool else 'false' }}"
#               - name: port
#                 value: "6443"
#               - name: vip_interface
#                 value: "{{ kube_vip_iface | default('') }}"
#               - name: vip_cidr
#                 value: "{{ apiserver_endpoint | ansible.utils.ipsubnet | ansible.utils.ipaddr('prefix') }}"
#               - name: cp_enable
#                 value: "true"
#               - name: cp_namespace
#                 value: kube-system
#               - name: address
#                 value: "{{ apiserver_endpoint }}"
#               image: "ghcr.io/kube-vip/kube-vip:{{ kube_vip_tag_version }}"
#               imagePullPolicy: Always
#               name: kube-vip
#               securityContext:
#                 capabilities:
#                   add:
#                   - NET_ADMIN
#                   - NET_RAW
#                   - SYS_TIME
#             hostNetwork: true
#             serviceAccountName: kube-vip
#             tolerations:
#             - effect: NoSchedule
#               operator: Exists
#     kubeconfig: /tmp/talos-kubeconfig
#     state: present
#   when: deploy_kube_vip | default(true)

- name: Deploy MetalLB manifest
  kubernetes.core.k8s:
    definition: "{{ item }}"
    kubeconfig: /tmp/talos-kubeconfig
    state: present
  loop: "{{ lookup('url', 'https://raw.githubusercontent.com/metallb/metallb/' + metal_lb_controller_tag_version + '/config/manifests/metallb-native.yaml', split_lines=False) | from_yaml_all | list }}"
  when: 
    - item is not none
    - deploy_metallb | default(true)
    - kube_vip_lb_ip_range is not defined
    - not (cilium_bgp | default(false))
    - cilium_iface is not defined

- name: Deploy metrics-server
  kubernetes.core.k8s:
    state: present
    src: https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml
    kubeconfig: "{{ kubeconfig }}"

- name: Patch metrics-server to add insecure-tls flag
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig }}"
    state: present
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: metrics-server
        namespace: kube-system
      spec:
        template:
          spec:
            containers:
              - name: metrics-server
                args:
                  - --cert-dir=/tmp
                  - --secure-port=10250
                  - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
                  - --kubelet-use-node-status-port
                  - --metric-resolution=15s
                  - --kubelet-insecure-tls

# - name: Deploy kube-vip cloud controller
#   kubernetes.core.k8s:
#     definition: "{{ item }}"
#     kubeconfig: /tmp/talos-kubeconfig
#     state: present
#   loop: "{{ lookup('url', 'https://raw.githubusercontent.com/kube-vip/kube-vip-cloud-provider/' + kube_vip_cloud_provider_tag_version + '/manifest/kube-vip-cloud-controller.yaml', split_lines=False) | from_yaml_all | list }}"
#   when: 
#     - item is not none
#     - kube_vip_lb_ip_range is defined

# - name: Deploy kube-vip ConfigMap
#   kubernetes.core.k8s:
#     definition:
#       apiVersion: v1
#       kind: ConfigMap
#       metadata:
#         name: kubevip
#         namespace: kube-system
#       data:
#         range-global: "{{ kube_vip_lb_ip_range | default([]) | join(',') }}"
#     kubeconfig: /tmp/talos-kubeconfig
#     state: present
#   when: kube_vip_lb_ip_range is defined