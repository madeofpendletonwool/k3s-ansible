---
# roles/traefik_deployment/tasks/main.yml

- name: Update ingress-traefik namespace with pod security admission
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig }}"
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: ingress-traefik
        labels:
          pod-security.kubernetes.io/enforce: privileged
          pod-security.kubernetes.io/audit: privileged
          pod-security.kubernetes.io/warn: privileged
  delegate_to: localhost

- name: Deploy Traefik CRDs
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig }}"
    src: "{{ item }}"
    state: present
  loop:
    - https://raw.githubusercontent.com/traefik/traefik/v3.4/docs/content/reference/dynamic-configuration/kubernetes-crd-definition-v1.yml
    - https://raw.githubusercontent.com/traefik/traefik/v3.4/docs/content/reference/dynamic-configuration/kubernetes-crd-rbac.yml
  delegate_to: localhost

- name: Create Traefik ACME PVC
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig }}"
    state: present
    definition:
      apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: traefik-acme-pvc
        namespace: ingress-traefik
      spec:
        accessModes:
          - ReadWriteOnce  # Changed from ReadWriteMany as Rook-Ceph RBD is RWO
        resources:
          requests:
            storage: 1Gi
        storageClassName: rook-ceph-block  # Using Rook storage class


- name: Create Traefik RBAC resources
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig }}"
    state: present
    definition: "{{ item }}"
  loop:
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        name: traefik-cluster-admin
      rules:
        - apiGroups: ["*"]
          resources: ["*"]
          verbs: ["*"]
    - apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: traefik-account
        namespace: ingress-traefik
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        name: traefik-cluster-admin-binding
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: traefik-cluster-admin
      subjects:
        - kind: ServiceAccount
          name: traefik-account
          namespace: ingress-traefik
  delegate_to: localhost

- name: Calculate cluster size
  ansible.builtin.set_fact:
    cluster_size: "{{ groups['k3s_cluster'] | length | int }}"

- name: Set replica count
  ansible.builtin.set_fact:
    traefik_replicas: "{{ 3 if (cluster_size | int) > 3 else cluster_size }}"

- name: Debug replica count
  ansible.builtin.debug:
    msg: "Replica count is {{ traefik_replicas }} (type: {{ traefik_replicas | type_debug }})"

- name: Deploy Traefik Deployment
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig }}"
    state: present
    definition: "{{ lookup('template', 'traefik-deployment.yaml.j2') | from_yaml }}"
  delegate_to: localhost

- name: Deploy Traefik Services
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig }}"
    state: present
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: "{{ item.name }}"
        namespace: ingress-traefik
      spec:
        type: LoadBalancer
        selector:
          app: traefik
        ports: "{{ item.ports }}"
        externalTrafficPolicy: Cluster
  loop:
    - name: traefik-dashboard-service
      ports:
        - protocol: TCP
          port: 8080
          targetPort: 8080
    - name: traefik-web-service
      ports:
        - protocol: TCP
          name: web
          port: 80
        - protocol: TCP
          name: websecure
          port: 443
  delegate_to: localhost

- name: Wait for Traefik statefulset to be ready
  kubernetes.core.k8s_info:
    kubeconfig: "{{ kubeconfig }}"
    kind: Deployment
    name: traefik
    namespace: ingress-traefik
    wait: yes
    wait_timeout: 300
    wait_condition:
      type: Available
      status: true
  delegate_to: localhost
