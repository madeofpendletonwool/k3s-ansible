alertmanager:
  enabled: true
  apiVersion: v2

  config:
    global:
      resolve_timeout: 5m
    inhibit_rules:
      - source_matchers:
          - 'severity = critical'
        target_matchers:
          - 'severity =~ warning|info'
        equal:
          - 'namespace'
          - 'alertname'
      - source_matchers:
          - 'severity = warning'
        target_matchers:
          - 'severity = info'
        equal:
          - 'namespace'
          - 'alertname'
      - source_matchers:
          - 'alertname = InfoInhibitor'
        target_matchers:
          - 'severity = info'
        equal:
          - 'namespace'
      - target_matchers:
          - 'alertname = InfoInhibitor'
    route:
      group_by: ['namespace']
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 12h
      receiver: 'ntfy'
      routes:
        - receiver: 'null'
          matchers:
            - alertname = "Watchdog"
          continue: false 
    receivers:
      - name: 'null'
      - name: "ntfy"
        webhook_configs:
          - send_resolved: true
            url: 'http://alert-translator.{{ log_stack_namespace }}.svc.cluster.local/webhook'

    templates:
      - '/etc/alertmanager/config/*.tmpl'

  alertmanagerSpec:
    storage:
      volumeClaimTemplate:
        spec:
          storageClassName: rook-ceph-block
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 2Gi

grafana:
  enabled: true
  adminPassword: "{{ grafana_admin_pass }}"
  
  service:
    port: {{ grafana_port }}
  
  persistence:
    enabled: true
    type: pvc
    storageClassName: rook-ceph-block
    size: 10Gi

prometheus:
  enabled: true
  service:
    port: {{ prometheus_port }}
  
  prometheusSpec:
    retention: 30d
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: rook-ceph-block
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 50Gi

defaultRules:
  create: true
  rules:
    alertmanager: true
    etcd: true
    configReloaders: true
    general: true
    k8s: true
    kubeApiserver: true
    kubePrometheusNodeAlerting: true
    kubePrometheusNodeRecording: true
    kubernetesAbsent: true
    kubernetesApps: true
    kubernetesResources: true
    kubernetesStorage: true
    kubernetesSystem: true
    kubeScheduler: true
    network: true
    node: true
    prometheus: true
    time: true

prometheusOperator:
  enabled: true
  serviceAccount:
    create: true

kubeStateMetrics:
  enabled: true

nodeExporter:
  enabled: true

kubelet:
  enabled: true
  serviceMonitor:
    metricRelabelings:
      - action: replace
        sourceLabels:
          - node
        targetLabel: instance

kubeApiServer:
  enabled: true

kubeProxy:
  enabled: false
  service:
    port: 10249
    targetPort: 10249
  serviceMonitor:
    enabled: true
    https: true
    port: metrics
    selector:
      matchLabels:
        k8s-app: kube-proxy

kubeScheduler:
  enabled: false
  service:
    port: 10259
    targetPort: 10259
  serviceMonitor:
    enabled: true
    https: true
    port: https-metrics
    selector:
      matchLabels:
        k8s-app: kube-scheduler

kubeControllerManager:
  enabled: false
  service:
    port: 10257
    targetPort: 10257
  serviceMonitor:
    enabled: true
    https: true
    port: https-metrics
    selector:
      matchLabels:
        k8s-app: kube-controller-manager

coreDns:
  enabled: true