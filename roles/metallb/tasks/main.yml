---
# roles/metallb_post_config/tasks/main.yml

- name: Ensure metallb-system namespace exists
  kubernetes.core.k8s:
    kubeconfig: /tmp/talos-kubeconfig
    api_version: v1
    kind: Namespace
    name: metallb-system
    state: present
  delegate_to: localhost

- name: Wait for MetalLB namespace to be active
  kubernetes.core.k8s_info:
    kubeconfig: /tmp/talos-kubeconfig
    kind: Namespace
    name: metallb-system
    wait: yes
    wait_timeout: 60
  delegate_to: localhost

- name: Wait for MetalLB controller deployment
  block:
    - name: Initial wait for MetalLB controller
      kubernetes.core.k8s_info:
        kubeconfig: /tmp/talos-kubeconfig
        kind: Deployment
        name: controller
        namespace: metallb-system
        wait: yes
        wait_sleep: 5
        wait_timeout: 60  # Reduced timeout to try fix sooner
        wait_condition:
          type: Available
          status: "True"
      delegate_to: localhost
      register: metallb_status
      until: metallb_status.resources is defined and metallb_status.resources | length > 0
      retries: 0
      delay: 10
  rescue:
    - name: Delete stuck MetalLB controller pod
      kubernetes.core.k8s:
        kubeconfig: /tmp/talos-kubeconfig
        kind: Pod
        namespace: metallb-system
        label_selectors:
          - app=metallb,component=controller
        state: absent
      delegate_to: localhost

    - name: Wait again for MetalLB controller after pod deletion
      kubernetes.core.k8s_info:
        kubeconfig: /tmp/talos-kubeconfig
        kind: Deployment
        name: controller
        namespace: metallb-system
        wait: yes
        wait_sleep: 5
        wait_timeout: 240
        wait_condition:
          type: Available
          status: "True"
      delegate_to: localhost
      register: metallb_status
      until: metallb_status.resources is defined and metallb_status.resources | length > 0
      retries: 24
      delay: 10


- name: Wait for MetalLB webhook pod
  kubernetes.core.k8s_info:
    kubeconfig: /tmp/talos-kubeconfig
    kind: Pod
    namespace: metallb-system
    label_selectors:
      - component=controller
    wait: yes
    wait_timeout: "{{ metal_lb_available_timeout | default(300) | int }}"  # Convert to integer
    wait_condition:
      type: Ready
      status: true
  delegate_to: localhost

- name: Clean up old MetalLB controller replicasets
  kubernetes.core.k8s:
    kubeconfig: /tmp/talos-kubeconfig
    state: absent
    api_version: apps/v1
    kind: ReplicaSet
    namespace: metallb-system
    label_selectors:
      - component=controller
      - app=metallb
    wait: no  # Changed to no - don't wait for deletion
  when: cleanup_old_replicasets | default(true)
  ignore_errors: true
  delegate_to: localhost

- name: Wait for MetalLB webhook service to be ready
  kubernetes.core.k8s_info:
    kubeconfig: /tmp/talos-kubeconfig
    kind: Service
    name: metallb-webhook-service
    namespace: metallb-system
    wait: yes
    wait_timeout: "{{ metal_lb_available_timeout | default(300) | int }}"
  register: webhook_service
  until: webhook_service.resources | length > 0
  retries: 30
  delay: 10
  delegate_to: localhost

- name: Short pause to allow webhook to initialize
  ansible.builtin.pause:
    seconds: 15

- name: Create temp directory for metallb configs
  ansible.builtin.file:
    path: /tmp/metallb
    state: directory
    mode: '0755'
  delegate_to: localhost

- name: Create MetalLB Config
  ansible.builtin.copy:
    dest: /tmp/metallb/config.yaml
    content: |
      apiVersion: metallb.io/v1beta1
      kind: IPAddressPool
      metadata:
        name: first-pool
        namespace: metallb-system
      spec:
        addresses:
          - {{ metal_lb_ip_range }}
      {% if metal_lb_mode == "layer2" %}
      ---
      apiVersion: metallb.io/v1beta1
      kind: L2Advertisement
      metadata:
        name: default
        namespace: metallb-system
      {% endif %}
      {% if metal_lb_mode == "bgp" %}
      ---
      apiVersion: metallb.io/v1beta2
      kind: BGPPeer
      metadata:
        name: default
        namespace: metallb-system
      spec:
        myASN: {{ metal_lb_bgp_my_asn }}
        peerASN: {{ metal_lb_bgp_peer_asn }}
        peerAddress: {{ metal_lb_bgp_peer_address }}
      ---
      apiVersion: metallb.io/v1beta1
      kind: BGPAdvertisement
      metadata:
        name: default
        namespace: metallb-system
      {% endif %}
  delegate_to: localhost

# Try applying config with retries
- name: Deploy MetalLB Configuration using kubectl with retries
  ansible.builtin.shell: |
    kubectl --kubeconfig=/tmp/talos-kubeconfig apply -f /tmp/metallb/config.yaml
  register: apply_result
  changed_when: "'configured' in apply_result.stdout or 'created' in apply_result.stdout"
  retries: 5
  delay: 15
  until: apply_result.rc == 0
  delegate_to: localhost

- name: Verify MetalLB configuration
  kubernetes.core.k8s_info:
    kubeconfig: /tmp/talos-kubeconfig
    kind: "{{ item }}"
    namespace: metallb-system
  loop: "{{ verification_resources }}"
  vars:
    verification_resources: >-
      {{
        (metal_lb_mode == 'layer2')
        | ternary(
          ['IPAddressPool', 'L2Advertisement'],
          ['IPAddressPool', 'BGPPeer', 'BGPAdvertisement']
        )
      }}
  delegate_to: localhost
