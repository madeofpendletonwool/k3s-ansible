- name: Create jellyfin namespace
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig }}"
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: jellyfin

- name: Create PVC for Jellyfin config/cache
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig }}"
    state: present
    definition:
      apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: jellyfin-config-pvc
        namespace: jellyfin
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi  # Jellyfin needs more space for cache/transcoding
        storageClassName: rook-ceph-block

- name: Deploy Jellyfin
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig }}"
    state: present
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: jellyfin
        namespace: jellyfin
      spec:
        replicas: 1
        strategy:
          type: Recreate  # For clean volume handling
        selector:
          matchLabels:
            app: jellyfin
        template:
          metadata:
            labels:
              app: jellyfin
          spec:
            terminationGracePeriodSeconds: 120
            containers:
              - name: jellyfin
                image: jellyfin/jellyfin:latest
                ports:
                  - containerPort: 8096
                    name: http
                  - containerPort: 8920
                    name: https
                env:
                  - name: JELLYFIN_PublishedServerUrl
                    value: "https://jellyfin.{{ nginx_ingress_hostname }}"
                volumeMounts:
                  - name: config
                    mountPath: /config
                  - name: cache
                    mountPath: /cache
                  - name: movies
                    mountPath: /media/movies
                    readOnly: true
                  - name: shows
                    mountPath: /media/shows
                    readOnly: true
                lifecycle:
                  preStop:
                    exec:
                      command: ["/bin/sh", "-c", "sleep 10"]
            volumes:
              - name: config
                persistentVolumeClaim:
                  claimName: jellyfin-config-pvc
              - name: cache
                emptyDir: {}  # Temporary transcoding directory
              - name: movies
                nfs:
                  server: "{{ nfs_server }}"
                  path: "{{ nfs_movies_path }}"
              - name: shows
                nfs:
                  server: "{{ nfs_server }}"
                  path: "{{ nfs_shows_path }}"

- name: Create PodDisruptionBudget for Jellyfin
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig }}"
    state: present
    definition:
      apiVersion: policy/v1
      kind: PodDisruptionBudget
      metadata:
        name: jellyfin-pdb
        namespace: jellyfin
      spec:
        minAvailable: 1
        selector:
          matchLabels:
            app: jellyfin

- name: Create Jellyfin Service
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig }}"
    state: present
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: jellyfin
        namespace: jellyfin
      spec:
        selector:
          app: jellyfin
        ports:
          - name: http
            port: 8096
            targetPort: 8096
          - name: https
            port: 8920
            targetPort: 8920

- name: Create Jellyfin Ingress
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig }}"
    state: present
    definition:
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        name: jellyfin-ingress
        namespace: jellyfin
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: web
      spec:
        rules:
          - host: "fin.{{ nginx_ingress_hostname }}"
            http:
              paths:
                - path: /
                  pathType: Prefix
                  backend:
                    service:
                      name: jellyfin
                      port:
                        number: 8096