- name: Create a directory for temporary files if it does not exist
  ansible.builtin.file:
    path: /tmp/k3s
    state: directory
    mode: '0755'

- name: Ensure postgres namespace exists
  command: >
    k3s kubectl create namespace postgres
  args:
    creates: /tmp/k3s/cattle-system-created
  register: create_namespace_result_postgres
  failed_when: create_namespace_result_postgres.rc != 0 and "already exists" not in create_namespace_result_postgres.stderr
  changed_when: create_namespace_result_postgres.rc == 0
  run_once: true

- name: Set KUBECONFIG environment variable
  set_fact:
    kubectl_config: /tmp/k3s.yaml
  run_once: true

- name: Check if Helm is installed
  command: helm version --short
  register: helm_installed
  ignore_errors: true
  changed_when: false

- name: Download Helm installation script if not installed
  get_url:
    url: https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
    dest: /tmp/get_helm.sh
    mode: 0755
  when: helm_installed.failed

- name: Run Helm installation script if not installed
  command: /tmp/get_helm.sh
  when: helm_installed.failed

- name: Verify Helm installation
  command: helm version
  register: helm_version
  changed_when: false
  run_once: true

- name: Check if postgres repo is added
  command: helm repo list
  register: helm_repo_list
  ignore_errors: true
  changed_when: false

- name: Update Helm repositories
  command: helm repo update
  run_once: true

- name: Add postgres latest repo if not present
  command: helm repo add bitnami https://charts.bitnami.com/bitnami
  when: "'bitnami' not in helm_repo_list.stdout"
  changed_when: true
  run_once: true

# - name: Create Service for postgres
#   template:
#     src: "postgres-service-template.yaml.j2"
#     dest: "/tmp/k3s/postgres-service.yaml"
#     owner: "{{ ansible_user_id }}"
#     mode: 0755
#   run_once: true

# - name: Apply Service for postgres
#   command: >
#     k3s kubectl apply -f /tmp/k3s/postgres-service.yaml
#   register: postgres_service_apply_result
#   changed_when: false
#   run_once: true
#   until: postgres_service_apply_result.rc == 0
#   retries: 5

- name: Create PVC for postgres Data
  template:
    src: "postgres-pvc-template.yaml.j2"
    dest: "/tmp/k3s/postgres-pvc.yaml"
    owner: "{{ ansible_user_id }}"
    mode: 0755
  run_once: true

- name: Apply PVC for postgres Data
  command: >
    k3s kubectl apply -f /tmp/k3s/postgres-pvc.yaml
  register: postgres_pvc_apply_result
  changed_when: false
  run_once: true
  until: postgres_pvc_apply_result.rc == 0
  retries: 5

- name: Deploy postgres using Helm
  command: >
    helm upgrade --install my-postgresql bitnami/postgresql --version 15.5.28 --set persistence.existingClaim=pgdata --set primary.persistence.storageClass=donghorn --set primary.persistence.size=10Gi
  register: postgres_deploy_result
  changed_when: false
  run_once: true
  until: postgres_deploy_result.rc == 0  --set persistence.existingClaim=pgdata \
  --set primary.persistence.storageClass=longhorn \
  --set primary.persistence.size=10Gi
  retries: 5
  environment:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml

- name: Recursively remove directory
  ansible.builtin.file:
    path: /tmp/k3s
    state: absent